tabs:
  world: "WorldData"
  regional: "RegionalData"
  national: "NationalData"
  subnational: "SubnationalData"
  covid_series: "CovidSeries"
  covid_series_flat: "CovidSeriesFlat"
  covid_trend: "CovidTrend"
  sources: "Sources"


json:
  filepath: "test_scraper_all.json"
  additional:
    - filepath: "test_scraper.json" # used by the covid viz and doesn't include unneeded timeseries
      remove:
        - "covid_series_flat"
    - filepath: "test_scraper_daily.json"
      tabs:
        - tab: "national"
          key: "cumulative"
          hxltags: # controls which fields are included
            - "#country+code"
            - "#country+name"
            - "#meta+ishrp"
            - "#affected+infected+new+per100000+weekly"
            - "#affected+infected+new+pct+weekly"
            - "#affected+killed+new+weekly"
            - "#affected+killed+new+pct+weekly"
            - "#capacity+doses+delivered+total"
            - "#capacity+doses+administered+total"
            - "#targeted+doses+delivered+pct"
            - "#impact+type"
            - "#value+covid+funding+hrp+pct"
            - "#value+funding+hrp+pct"
            - "#affected+inneed"
            - "#affected+tested+avg+per1000"
            - "#affected+tested+positive+pct"
            - "#vaccination+num+ratio"
            - "#value+food+num+ratio"
    - filepath: "test_scraper_covidseries.json"
      tabs:
        - tab: "covid_series"
          key: "timeseries"
        - tab: "national"
          key: "cumulative"
          filters:
            "#country+code": "{{countries_to_save}}"
          hxltags:
            - "#country+code"
            - "#country+name"
            - "#affected+infected"
            - "#affected+killed"
        - tab: "regional"
          key: "global"
          filters:
            "#region+name": "global"
          hxltags:
            - "#region+name"
            - "#affected+infected"
            - "#affected+killed"

additional_sources:
  - indicator: "#food-prices"
    dataset: "wfp-food-prices"
    date: "2020-08-15"
  - indicator: "#vaccination-campaigns"
    dataset: "immunization-campaigns-impacted"
    date: "2020-08-24"
  - indicator: "#access-data"
    source: "Multiple sources"
    date: "2021-05-03"
    source_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"

monthly_report:
  hxltag: "#meta+monthly+report"
  dataset:
    dataset_source: "OCHA Centre for Humanitarian Data"
  resource:
    url: "http://monthly_report"
    last_modified: "2021-06-15T15:08:00.995050"

# national
scraper_national:
  population:
    source: "WorldPop"
    source_url: "https://data.humdata.org/organization/world-bank-group"
    format: "xls"
    url: "tests/fixtures/API_SP.POP.TOTL_DS2_en_excel_v2_1302508_LIST.xls"
    sheet: "Data"
    headers: 3
    adm_cols:
      - "Country Code"
    adm_exact: True
    date_col: "Year"
    date_type: "year"
    input_cols:
      - "Value"
    output_cols:
      - "Population"
    output_hxltags:
      - "#population"
# only for testing dividing by population
  who_national:
    format: "csv"
    dataset: "coronavirus-covid-19-cases-and-deaths"
    url: "tests/fixtures/WHO-COVID-19-global-data.csv"
    headers: 1
    adm_cols:
      - "Country_code"
    date_col: "Date_reported"
    date_type: "date"
    use_date_from_date_col: True
    input_cols:
      - "Cumulative_cases"
      - "Cumulative_deaths"
    process_cols:
      - "number_format(Cumulative_cases / #population * 100000, format='%.2f')"
      - "number_format(Cumulative_deaths / #population * 100000, format='%.2f')"
    output_cols:
      - "CasesPer100000"
      - "DeathsPer100000"
    output_hxltags:
      - "#affected+infected+per100000"
      - "#affected+killed+per100000"
# A fake one where we sum all values in cumulative column across dates which in practice makes no sense
  who_national2:
    format: "csv"
    dataset: "coronavirus-covid-19-cases-and-deaths"
    url: "tests/fixtures/WHO-COVID-19-global-data.csv"
    headers: 1
    prefilter: "Date_reported == '2020-08-06'"
    adm_cols:
      - "Country_code"
    date_col: "Date_reported"
    date_type: "date"
    use_date_from_date_col: True
    input_cols:
      - "Cumulative_cases"
      - "Cumulative_deaths"
    sum_cols:
      - formula: "number_format(Cumulative_cases / #population * 100000, format='%.2f')"
        mustbepopulated: True
      - formula: "number_format(Cumulative_deaths / #population * 100000, format='%.2f')"
        mustbepopulated: True
    output_cols:
      - "Cases2Per100000"
      - "Deaths2Per100000"
    output_hxltags:
      - "#affected+infected+2+per100000"
      - "#affected+killed+2+per100000"
  inform_hazard:
    format: "xlsx"
    dataset: "inform-covid-19-risk-index-version-0-1-2"
    sheet: "Hazard & Exposure"
    headers: 1
    adm_cols:
      - "Iso3"
    input_cols:
      - "Covid-19 Hazard & Exposure"
    output_cols:
      - "Covid19HazardExposure"
    output_hxltags:
      - "#severity+hazard+inform+num"
  inform:
    format: "xlsx"
    dataset: "inform-covid-19-risk-index-version-0-1-2"
    sheet: "INFORM COVID-19 RISK 2020 (a-z)"
    headers: 1
    adm_cols:
      - "ISO3"
    input_cols:
      - "LACK OF COPING CAPACITY"
      - "VULNERABILITY"
      - "INFORM COVID-19 RISK"
      - "COVID-19 RISK CLASS"
    output_cols:
      - "LackOfCopingCapacity"
      - "Vulnerability"
      - "Risk"
      - "RiskClass"
    output_hxltags:
      - "#severity+coping+inform+num"
      - "#severity+inform+num+vulnerability"
      - "#severity+inform+num"
      - "#severity+inform+type"
  economicindex:
    format: "xlsx"
    dataset: "covid-19-economic-exposure-index"
    sheet: "economic exposure"
    headers: 1
    adm_cols:
      - "Country"
    input_cols:
      - "Covid 19 Economic exposure index"
    output_cols:
      - "EconomicExposure"
    output_hxltags:
      - "#severity+economic+num"
  ifi_national:
    format: "csv"
    url: "tests/fixtures/Tracker COVID - Country Summary_HDX.csv"
    dataset: "compilation-of-international-financial-institution-and-economic-data"
    date: "2020-07-29"
    headers: 1
    stop_row:
      "Country Code": ""
    adm_cols:
      - "Country Code"
    input_cols:
      - "World Bank"
      - "IFC"
      - "IMF"
      - "AfDB"
      - "ADB"
      - "IDB"
      - "ISDB"
      - "EBRD"
      - "Total (USD mn)"
      - "Total per capita (USD mn)"
      - "Total as percentage of GDP (%)"
    input_ignore_vals:
      - "N/A"
      - "-"
    input_transforms:
      "World Bank": "get_numeric_if_possible(World Bank) if World Bank else 0"
      "IFC": "get_numeric_if_possible(IFC) if IFC else 0"
      "IMF": "get_numeric_if_possible(IMF) if IMF else 0"
      "AfDB": "get_numeric_if_possible(AfDB) if AfDB else 0"
      "ADB": "get_numeric_if_possible(ADB) if ADB else 0"
      "IDB": "get_numeric_if_possible(IDB) if IDB else 0"
      "ISDB": "get_numeric_if_possible(ISDB) if ISDB else 0"
      "EBRD": "get_numeric_if_possible(EBRD) if EBRD else 0"
      "Total (USD mn)": "get_numeric_if_possible(Total (USD mn)) if Total (USD mn) else 0"
      "Total per capita (USD mn)": "get_numeric_if_possible(Total per capita (USD mn)) if Total per capita (USD mn) else 0"
      "Total as percentage of GDP (%)": "get_numeric_if_possible(Total as percentage of GDP (%)) if Total as percentage of GDP (%) else 0"
    process_cols:
      - "number_format(World Bank * 1000000, format='%.0f')"
      - "number_format(IFC * 1000000, format='%.0f')"
      - "number_format(IMF * 1000000, format='%.0f')"
      - "number_format(AfDB * 1000000, format='%.0f')"
      - "number_format(ADB * 1000000, format='%.0f')"
      - "number_format(IDB * 1000000, format='%.0f')"
      - "number_format(ISDB * 1000000, format='%.0f')"
      - "number_format(EBRD * 1000000, format='%.0f')"
      - "number_format(Total (USD mn) * 1000000, format='%.0f')"
      - "number_format(Total per capita (USD mn))"
      - "number_format(Total as percentage of GDP (%))"
    output_cols:
      - "World Bank"
      - "IFC"
      - "IMF"
      - "AfDB total"
      - "ADB total"
      - "IDB total"
      - "ISDB total"
      - "EBRD total"
      - "IFI COVID19 total"
      - "IFI COVID19 total percap"
      - "IFI COVID19 total pcgdp"
    output_hxltags:
      - "#value+wb+total"
      - "#value+ifc+total"
      - "#value+imf+total"
      - "#value+afdb+total"
      - "#value+adb+total"
      - "#value+idb+total"
      - "#value+isdb+total"
      - "#value+ebrd+total"
      - "#value+ifi+total"
      - "#value+ifi+percap"
      - "#value+gdp+ifi+pct"
  gam:
    format: "xlsx"
    dataset: "world-global-expanded-database-on-severe-wasting"
    sheet: "Trend"
    headers:
      - 3
      - 4
    adm_cols:
      - "ISO"
    date_col: "Year*"
    date_type: "year"
    input_cols:
      - "National Point Estimate"
    output_cols:
      - "Malnutrition Estimate"
    output_hxltags:
      - "#severity+malnutrition+num+national"
  needs:
    format: "xlsx"
    dataset: "global-humanitarian-overview-2020-figures"
    sheet: "Raw Data"
    headers: 1
    prefilter: "Metric == 'People in need' and PiN Value for Dataviz == 'yes'"
    adm_cols:
      - "Country Code"
    date_col: "Year"
    date_type: "year"
    filter_cols:
      - "Metric"
      - "PiN Value for Dataviz"
    input_cols:
      - "Value"
    output_cols:
      - "PeopleInNeed"
    output_hxltags:
      - "#affected+inneed"
  idmc:
    format: "csv"
    dataset: "idmc-internally-displaced-persons-idps"
    headers: 1
    use_hxl: True
    date_col: "#date+year"
    date_type: "year"
    input_cols:
      - "#affected+idps+ind+stock+conflict"
      - "#affected+idps+ind+stock+disaster"
    input_transforms:
      "#affected+idps+ind+stock+conflict": "int(#affected+idps+ind+stock+conflict) if #affected+idps+ind+stock+conflict else 0"
      "#affected+idps+ind+stock+disaster": "int(#affected+idps+ind+stock+disaster) if #affected+idps+ind+stock+disaster else 0"
    process_cols:
      - "#affected+idps+ind+stock+conflict + #affected+idps+ind+stock+disaster"
    output_cols:
      - "TotalIDPs"
    output_hxltags:
      - "#affected+displaced"
  imperial:
    format: "xlsx"
    dataset: "imperial-college-covid-19-projections"
    sheet: 1
    headers: 1
    use_hxl: True
    output_cols:
      - "Imp: Total Cases(min)"
      - "Imp: Total Cases(max)"
      - "Imp: Total Deaths(min)"
      - "Imp: Total Deaths(max)"
    output_hxltags:
      - "#affected+imperial+infected+min"
      - "#affected+imperial+infected+max"
      - "#affected+imperial+killed+min"
      - "#affected+imperial+killed+max"
  lshtm:
    format: "xlsx"
    dataset: "lshtm-covid-19-projections"
    sheet: 1
    headers: 1
    use_hxl: True
    output_cols:
      - "LSHTM: Total Cases(min)"
      - "LSHTM: Total Cases(max)"
      - "LSHTM: Total Deaths(min)"
      - "LSHTM: Total Deaths(max)"
    output_hxltags:
      - "#affected+infected+lshtm+min"
      - "#affected+infected+lshtm+max"
      - "#affected+killed+lshtm+min"
      - "#affected+killed+lshtm+max"
  school:
    format: "csv"
    dataset: "global-school-closures-covid19"
    headers: 1
    adm_cols:
      - "ISO"
    date_col: "Date"
    date_type: "date"
    input_cols:
      - "Status"
    output_cols:
      - "SchoolClosure"
    output_hxltags:
      - "#impact+type"
  travel:
    format: "csv"
    dataset: "covid-19-global-travel-restrictions-and-airline-information"
    headers: 1
    adm_cols:
      - "iso3"
    input_cols:
      - "info"
      - "published"
    input_append:
      - "info"
    input_keep:
      - "published"
    output_cols:
      - "TravelRestrictions"
      - "TravelRestrictionsPublished"
    output_hxltags:
      - "#severity+travel"
      - "#severity+date+travel"
  cerf_national:
    format: "csv"
    dataset: "cerf-covid-19-allocations"
    force_date_today: True
    headers: 1
    adm_cols:
      - "ISO2Country"
    filter_cols:
      - "PFType"
    subsets:
      - filter: "PFType == 'CBPF'"
        input_cols:
          - "TargetAmt"
        input_transforms:
          TargetAmt: "float(TargetAmt)"
        sum_cols:
          - formula: "TargetAmt"
            mustbepopulated: False
        output_cols:
          - "CBPFCovidFunding"
        output_hxltags:
          - "#value+cbpf+covid+funding+total+usd"
      - filter: "PFType == 'CERF'"
        input_cols:
          - "TargetAmt"
        input_transforms:
          TargetAmt: "float(TargetAmt)"
        sum_cols:
          - formula: "TargetAmt"
            mustbepopulated: False
        output_cols:
          - "CERFCovidFunding"
        output_hxltags:
          - "#value+cerf+covid+funding+total+usd"
  sadd:
    format: "csv"
    dataset: "covid-19-sex-disaggregated-data-tracker"
    date: "2020-08-07"
    url: "tests/fixtures/covid-19-sex-disaggregated-data.csv"
    headers: 1
    external_filter:
      url: "https://github.com/OCHA-DAP/hdx-scraper-covid-viz/raw/main/tests/fixtures/sadd-countries-to-include.csv"
      hxltags:
        - "#country+code+v_iso2"
    adm_cols:
      - "Country code"
    input_cols:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    input_transforms:
      "Cases (% male)": "get_numeric_if_possible(Cases (% male))"
      "Cases (% female)": "get_numeric_if_possible(Cases (% female))"
      "Deaths (% male)": "get_numeric_if_possible(Deaths (% male))"
      "Deaths (% female)": "get_numeric_if_possible(Deaths (% female))"
    process_cols:
      - "number_format(Cases (% male))"
      - "number_format(Cases (% female))"
      - "number_format(Deaths (% male))"
      - "number_format(Deaths (% female))"
    output_cols:
      - "Cases (% male)"
      - "Cases (% female)"
      - "Deaths (% male)"
      - "Deaths (% female)"
    output_hxltags:
      - "#affected+infected+m+pct"
      - "#affected+f+infected+pct"
      - "#affected+killed+m+pct"
      - "#affected+f+killed+pct"
  covidtests:
    format: "xlsx"
    dataset: "total-covid-19-tests-performed-by-country"
    date: "2021-05-03"
    url: "tests/fixtures/owid-covid-data.xlsx"
    headers: 1
    sheet: 1
    prefilter: "new_tests is not None and new_tests > 0"
    date_col: "date"
    date_type: "date"
    adm_cols:
      - "iso_code"
    input_cols:
      - "new_tests"
      - "new_tests_per_thousand"
      - "new_tests_smoothed_per_thousand"
      - "positive_rate"
    output_cols:
      - "New Tests"
      - "New Tests Per Thousand"
      - "New Tests Per Thousand (7-day)"
      - "Positive Test Rate"
    output_hxltags:
      - "#affected+tested"
      - "#affected+tested+per1000"
      - "#affected+tested+avg+per1000"
      - "#affected+tested+positive+pct"
  ctfallbacks:
    format: "xlsx"
    dataset: "total-covid-19-tests-performed-by-country"
    date: "2021-05-03"
    url: "NOTEXIST.xlsx"
    headers: 1
    sheet: 1
    prefilter: "new_tests is not None and new_tests > 0"
    date_col: "date"
    date_type: "date"
    adm_cols:
      - "iso_code"
    input_cols:
      - "new_tests"
      - "new_tests_per_thousand"
      - "new_tests_smoothed_per_thousand"
      - "positive_rate"
    output_cols:
      - "New Tests"
      - "New Tests Per Thousand"
      - "New Tests Per Thousand (7-day)"
      - "Positive Test Rate"
    output_hxltags:
      - "#affected+tested"
      - "#affected+tested+per1000"
      - "#affected+tested+avg+per1000"
      - "#affected+tested+positive+pct"
  cadre_harmonise:
    format: "xlsx"
    dataset: "cadre-harmonise"
    url: "tests/fixtures/cadre_harmonise_caf_ipc.xlsx"
    date: "2021-05-03"
    headers: 1
    sheet: 1
    prefilter: "chtype == 'current'"
    sort:
      reverse: True
      keys:
        - "reference_year"
        - "reference_code"
    adm_cols:
      - "adm0_pcod3"
    date_col:
      - "reference_year"
      - "reference_code"
    date_type: "int"
    filter_cols:
      - "chtype"
    input_cols:
      - "phase3"
      - "phase4"
      - "phase5"
      - "phase35"
      - "population"
    input_transforms:
      "phase3": "float(phase3)"
      "phase4": "float(phase4)"
      "phase5": "float(phase5)"
      "phase35": "float(phase35)"
      "population": "float(population)"
    sum_cols:
      - formula: "get_fraction_str(phase3, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase4, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase5, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase35, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(population, #population)"
        mustbepopulated: True
    output_cols:
      - "FoodInsecurityCHP3"
      - "FoodInsecurityCHP4"
      - "FoodInsecurityCHP5"
      - "FoodInsecurityCHP3+"
      - "FoodInsecurityCHAnalysed"
    output_hxltags:
      - "#affected+ch+food+p3+pct"
      - "#affected+ch+food+p4+pct"
      - "#affected+ch+food+p5+pct"
      - "#affected+ch+food+p3plus+pct"
      - "#affected+ch+food+analysed+pct"
  access:
    source:
      "#access+visas+pct": "OCHA"
      "#access+travel+pct": "OCHA"
      "#event+year+previous+num": "Aid Workers Database"
      "#event+year+todate+num": "Aid Workers Database"
      "#event+year+previous+todate+num": "Aid Workers Database"
      "#activity+cerf+project+insecurity+pct": "UNCERF"
      "#activity+cbpf+project+insecurity+pct": "UNCERF"
      "#population+education": "UNESCO"
      "default_source": "Multiple sources"
    source_url:
      "#event+year+previous+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "#event+year+previous+todate+num": "https://data.humdata.org/dataset/security-incidents-on-aid-workers"
      "default_url": "https://docs.google.com/spreadsheets/d/e/2PACX-1vRSzJzuyVt9i_mkRQ2HbxrUl2Lx2VIhkTHQM-laE8NyhQTy70zQTCuFS3PXbhZGAt1l2bkoA4_dAoAP/pub?gid=1565063847&single=true&output=csv"
    format: "csv"
    url: "tests/fixtures/Access Indicators  - Data for Dashboard.csv"
    headers: 1
    use_hxl: True
    input_transforms:
      "#access+visas+pct": "get_numeric_if_possible(#access+visas+pct)"
      "#access+travel+pct": "get_numeric_if_possible(#access+travel+pct)"
      "#activity+cerf+project+insecurity+pct": "get_numeric_if_possible(#activity+cerf+project+insecurity+pct)"
      "#activity+cbpf+project+insecurity+pct": "get_numeric_if_possible(#activity+cbpf+project+insecurity+pct)"
      "#population+education": "get_numeric_if_possible(#population+education)"


fts:
  v1_url: "https://api.hpc.tools/v1/public/"
  v2_url: "https://api.hpc.tools/v2/"
  source_url: "https://data.humdata.org/dataset/covid-19-data-visual-inputs"

food_prices:
  format: "csv"
  dataset: "wfp-food-prices"
  base_url: "https://api.wfp.org"
  date: "2021-05-15"

vaccination_campaigns:
  format: "csv"
  dataset: "immunization-campaigns-impacted"
  headers: 1

unhcr:
  url: "https://data2.unhcr.org/population/?population_collection=4&geo_id="
  source_url: "https://data.humdata.org/organization/unhcr"

who_covid:
  format: "csv"
  dataset: "coronavirus-covid-19-cases-and-deaths"
  url: "tests/fixtures/WHO-COVID-19-global-data.csv"
  headers: 1

# regional
regional:
  format: "xlsx"
  dataset: "unocha-office-locations"
  sheet: 1
  headers: 1
  iso3: "ISO3"
  region: "Regional_office"
  process_cols:
    "Cumulative_cases":
      action: "sum"
    "Cumulative_deaths":
      action: "sum"
    "IFI COVID19 total":
      action: "sum"
    "CBPFCovidFunding":
      action: "sum"
    "CERFCovidFunding":
      action: "sum"
    "RequiredHRPFunding":
      action: "sum"
    "HRPFunding":
      action: "sum"
    "HRPPercentFunded":
      action: "eval"
      formula: "get_fraction_str(HRPFunding, RequiredHRPFunding) if HRPFunding is not None and RequiredHRPFunding is not None else ''"
    "RequiredHRPCovidFunding":
      action: "sum"
    "HRPCovidFunding":
      action: "sum"
    "HRPCovidPercentFunded":
      action: "eval"
      formula: "get_fraction_str(HRPCovidFunding, RequiredHRPCovidFunding) if HRPCovidFunding is not None and RequiredHRPCovidFunding is not None else ''"
    "HRPGBVFunding":
      action: "sum"
    "RequiredOtherPlansFunding":
      action: "sum"
    "OtherPlansFunding":
      action: "sum"
    "OtherPlansPercentFunded":
      action: "eval"
      formula: "get_fraction_str(OtherPlansFunding, RequiredOtherPlansFunding) if OtherPlansFunding is not None and RequiredOtherPlansFunding is not None else ''"
    "% of visas pending or denied":
      action: "mean"
    "% of travel authorizations or movements denied":
      action: "mean"
    "Number of incidents reported since start of year":
      action: "sum"
    "% of CERF projects affected by insecurity and inaccessibility":
      action: "mean"
    "% of CBPF projects affected by insecurity and inaccessibility":
      action: "mean"
  global:
    - "% of visas pending or denied"
    - "% of travel authorizations or movements denied"
    - "Number of incidents reported since start of year"
    - "% of CERF projects affected by insecurity and inaccessibility"
    - "% of CBPF projects affected by insecurity and inaccessibility"


scraper_global:
  cerf_global:
    format: "csv"
    dataset: "cerf-covid-19-allocations"
    force_date_today: True
    headers: 1
    filter_cols:
      - "PFType"
    subsets:
      - filter: "PFType == 'CBPF'"
        input_cols:
          - "TargetAmt"
        sum_cols:
          - formula: "TargetAmt"
            mustbepopulated: False
        input_transforms:
          TargetAmt: "float(TargetAmt)"
        output_cols:
          - "CBPFCovidFunding"
        output_hxltags:
          - "#value+cbpf+covid+funding+total+usd"
      - filter: "PFType == 'CERF'"
        input_cols:
          - "TargetAmt"
        sum_cols:
          - formula: "TargetAmt"
            mustbepopulated: False
        input_transforms:
          TargetAmt: "float(TargetAmt)"
        output_cols:
          - "CERFCovidFunding"
        output_hxltags:
          - "#value+cerf+covid+funding+total+usd"
  ifi_global:
    format: "csv"
    url: "tests/fixtures/Tracker COVID - Country Summary_HDX.csv"
    dataset: "compilation-of-international-financial-institution-and-economic-data"
    date: "2020-07-29"
    headers: 1
    stop_row:
      "Country Code": ""
    adm_cols:
      - "Country Code"
    input_cols:
      - "Total (USD mn)"
    input_ignore_vals:
      - "N/A"
      - "-"
    input_transforms:
      "Total (USD mn)": "get_numeric_if_possible(Total (USD mn)) if Total (USD mn) else 0"
    sum_cols:
      - formula: "number_format(Total (USD mn) * 1000000, format='%.0f')"
        mustbepopulated: True
    output_cols:
      - "IFI COVID19 global"
    output_hxltags:
      - "#value+ifi+total"

# subnational
ipc:
  url: "http://mapipcissprd.us-east-1.elasticbeanstalk.com/api/public/population-tracking-tool/data/2017,2020/?page=%d&limit=1&condition=A&export=true&country=%s"
  dataset: "ipc-country-data"

scraper_subnational:
  cadre_harmonise:
    format: "xlsx"
    dataset: "cadre-harmonise"
    url: "tests/fixtures/cadre_harmonise_caf_ipc.xlsx"
    date: "2021-05-03"
    headers: 1
    sheet: 1
    prefilter: "chtype == 'current'"
    sort:
      reverse: True
      keys:
        - "reference_year"
        - "reference_code"
    adm_cols:
      - "adm0_pcod3"
      - - "adm1_pcod2"
        - "adm1_pcod3"
        - "adm1_name"
    date_col:
      - "reference_year"
      - "reference_code"
    date_type: "int"
    filter_cols:
      - "chtype"
    input_cols:
      - "phase3"
      - "phase4"
      - "phase5"
      - "phase35"
      - "population"
    input_transforms:
      "phase3": "float(phase3)"
      "phase4": "float(phase4)"
      "phase5": "float(phase5)"
      "phase35": "float(phase35)"
      "population": "float(population)"
    sum_cols:
      - formula: "get_fraction_str(phase3, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase4, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase5, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(phase35, population)"
        mustbepopulated: True
      - formula: "get_fraction_str(population, #population)"
        mustbepopulated: True
    output_cols:
      - "FoodInsecurityCHP3"
      - "FoodInsecurityCHP4"
      - "FoodInsecurityCHP5"
      - "FoodInsecurityCHP3+"
      - "FoodInsecurityCHAnalysed"
    output_hxltags:
      - "#affected+ch+food+p3+pct"
      - "#affected+ch+food+p4+pct"
      - "#affected+ch+food+p5+pct"
      - "#affected+ch+food+p3plus+pct"
      - "#affected+ch+food+analysed+pct"
  ghrp:
    source: "Multiple sources"
    format: "csv"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vS3_uBOV_uRDSxOggfBus_pkCs6Iw9lm0nAxzwG14YF_frpm13WPKiM1oNnQ9zrUA/pub?gid=1565793974&single=true&output=csv"
    dataset: "global-humanitarian-response-plan-covid-19-administrative-boundaries-and-population-statistics"
    headers: 1
    adm_cols:
      - "alpha_3"
      - "ADM1_PCODE"
    input_cols:
      - "POPULATION"
    output_cols:
      - "Population"
    output_hxltags:
      - "#population"
  healthfac:
    source: "HOT"
    format: "csv"
    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vT-266S0iZDEvcQmxC2i7LNHWi4fUXtDkrwp8D6NMyHArxnegAYO9XXVnhuHaWvdxaoZTq7M6yGLaPX/pub?gid=1620744216&single=true&output=csv"
    headers: 1
    adm_cols:
      - "alpha_3"
      - "ADM1_PCODE"
    input_cols:
      - "NUMPOINTS"
    output_cols:
      - "NoHealthFacilities"
    output_hxltags:
      - "#loc+count+health"
#  idmc:
#    source: "IDMC"
#    format: "csv"
#    url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vSo25hpVc-ttGF0LEfWP2QTbqFTaf5SdGqp5eAqOfRwoGE6ROitk_Boco_3TMXjDARK8he3HdmzYkIP/pub?gid=893315748&single=true&output=csv"
#    headers: 1
#    adm_cols:
#      - ~
#      - "ADM1_PCODE"
#    input_cols:
#      - "DISPLACED"
#    output_cols:
#      - "NoDisplaced"
#    output_hxltags:
#      - "#affected+displaced"
  who_subnational:
    source: "WHO"
    format: "csv"
    url: "tests/fixtures/Vaccine coverage at subnational level - Data.csv"
    headers: 1
    adm_cols:
      - "iso"
      - "Admin1"
    date_col: "Year"
    date_type: "year"
    filter_cols:
      - "Vaccine"
    subsets:
      - filter: "Vaccine == 'HepB1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB1 Coverage"
        output_hxltags:
          - "#population+hepb1+pct+vaccinated"
      - filter: "Vaccine == 'HepB2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB2 Coverage"
        output_hxltags:
          - "#population+hepb2+pct+vaccinated"
      - filter: "Vaccine == 'HepB3'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "HepB3 Coverage"
        output_hxltags:
          - "#population+hepb3+pct+vaccinated"
      - filter: "Vaccine == 'IPV1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "IPV1 Coverage"
        output_hxltags:
          - "#population+ipv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "MCV1 Coverage"
        output_hxltags:
          - "#population+mcv1+pct+vaccinated"
      - filter: "Vaccine == 'MCV2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "MCV2 Coverage"
        output_hxltags:
          - "#population+mcv2+pct+vaccinated"
      - filter: "Vaccine == 'Pol1'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol1 Coverage"
        output_hxltags:
          - "#population+pct+pol1+vaccinated"
      - filter: "Vaccine == 'Pol2'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol2 Coverage"
        output_hxltags:
          - "#population+pct+pol2+vaccinated"
      - filter: "Vaccine == 'Pol3'"
        input_cols:
          - "Numerator"
          - "Denominator"
        input_ignore_vals:
          - "-2222"
          - "-4444"
        input_transforms:
          Numerator: "get_numeric_if_possible(Numerator)"
          Denominator: "get_numeric_if_possible(Denominator)"
        sum_cols:
          - formula: "get_fraction_str(Numerator, Denominator)"
            mustbepopulated: True
        output_cols:
          - "Pol3 Coverage"
        output_hxltags:
          - "#population+pct+pol3+vaccinated"
  gam:
    format: "xlsx"
    dataset: "world-global-expanded-database-on-severe-wasting"
    sheet: "Trend"
    headers:
      - 3
      - 4
    flatten:
      - original: "Region {{1}} Region Name"
        new: "Region Name"
      - original: "Region {{1}} Point Estimate"
        new: "Region Point Estimate"
    adm_cols:
      - "ISO"
      - "Region Name"
    date_col: "Year*"
    date_type: "year"
    input_cols:
      - "Region Point Estimate"
    output_cols:
      - "Malnutrition Estimate"
    output_hxltags:
      - "#severity+malnutrition+num+subnational"

road_networks_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRt_YtlKjmZLhAq5GDA05fmfnMbA_4SL32fWtH6PttLxpWZMuv1KeeoAW69d_P1If3pggf6_XRGXeuQ/pub?gid=0&single=true&output=csv"

health_facilities_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRt_YtlKjmZLhAq5GDA05fmfnMbA_4SL32fWtH6PttLxpWZMuv1KeeoAW69d_P1If3pggf6_XRGXeuQ/pub?gid=532593078&single=true&output=csv"

idps_locations_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRt_YtlKjmZLhAq5GDA05fmfnMbA_4SL32fWtH6PttLxpWZMuv1KeeoAW69d_P1If3pggf6_XRGXeuQ/pub?gid=725426850&single=true&output=csv"

3w_url: "https://docs.google.com/spreadsheets/d/e/2PACX-1vRt_YtlKjmZLhAq5GDA05fmfnMbA_4SL32fWtH6PttLxpWZMuv1KeeoAW69d_P1If3pggf6_XRGXeuQ/pub?gid=1662282962&single=true&output=csv"

gho:
  - ABW
  - AFG
  - AGO
  - ARG
  - BDI
  - BFA
  - BGD
  - BOL
  - BRA
  - CAF
  - CHL
  - CMR
  - COD
  - COG
  - COL
  - CRI
  - CUW
  - DJI
  - DOM
  - ECU
  - EGY
  - ETH
  - GUY
  - HTI
  - IRQ
  - JOR
  - KEN
  - LBN
  - LBY
  - MEX
  - MLI
  - MMR
  - MOZ
  - NER
  - NGA
  - PAK
  - PAN
  - PER
  - PRY
  - PSE
  - RWA
  - SDN
  - SOM
  - SSD
  - SYR
  - TCD
  - TTO
  - TUR
  - TZA
  - UGA
  - UKR
  - URY
  - VEN
  - YEM
  - ZMB
  - ZWE

HRPs:
  - AFG
  - BDI
  - BFA
  - CAF
  - CMR
  - COD
  - COL
  - ETH
  - HTI
  - IRQ
  - LBY
  - MLI
  - MMR
  - MOZ
  - NER
  - NGA
  - PAK
  - PSE
  - SDN
  - SOM
  - SSD
  - SYR
  - TCD
  - UKR
  - VEN
  - YEM
  - ZWE

country_name_overrides:
  PSE: "oPt"
  BOL: "Bolivia"
  VEN: "Venezuela"

country_name_mappings:
  "Congo DR": "COD"
  "CAR": "CAF"

admin1_info:
- {country: Afghanistan, iso3: AFG, pcode: AF01, name: Kabul}
- {country: Afghanistan, iso3: AFG, pcode: AF02, name: Kapisa}
- {country: Afghanistan, iso3: AFG, pcode: AF03, name: Parwan}
- {country: Afghanistan, iso3: AFG, pcode: AF04, name: Maidan Wardak}
- {country: Afghanistan, iso3: AFG, pcode: AF05, name: Logar}
- {country: Afghanistan, iso3: AFG, pcode: AF06, name: Nangarhar}
- {country: Afghanistan, iso3: AFG, pcode: AF07, name: Laghman}
- {country: Afghanistan, iso3: AFG, pcode: AF08, name: Panjsher}
- {country: Afghanistan, iso3: AFG, pcode: AF09, name: Baghlan}
- {country: Afghanistan, iso3: AFG, pcode: AF10, name: Bamyan}
- {country: Afghanistan, iso3: AFG, pcode: AF11, name: Ghazni}
- {country: Afghanistan, iso3: AFG, pcode: AF12, name: Paktika}
- {country: Afghanistan, iso3: AFG, pcode: AF13, name: Paktya}
- {country: Afghanistan, iso3: AFG, pcode: AF14, name: Khost}
- {country: Afghanistan, iso3: AFG, pcode: AF15, name: Kunar}
- {country: Afghanistan, iso3: AFG, pcode: AF16, name: Nuristan}
- {country: Afghanistan, iso3: AFG, pcode: AF17, name: Badakhshan}
- {country: Afghanistan, iso3: AFG, pcode: AF18, name: Takhar}
- {country: Afghanistan, iso3: AFG, pcode: AF19, name: Kunduz}
- {country: Afghanistan, iso3: AFG, pcode: AF20, name: Samangan}
- {country: Afghanistan, iso3: AFG, pcode: AF21, name: Balkh}
- {country: Afghanistan, iso3: AFG, pcode: AF22, name: Sar E Pul}
- {country: Afghanistan, iso3: AFG, pcode: AF23, name: Ghor}
- {country: Afghanistan, iso3: AFG, pcode: AF24, name: Daykundi}
- {country: Afghanistan, iso3: AFG, pcode: AF25, name: Uruzgan}
- {country: Afghanistan, iso3: AFG, pcode: AF26, name: Zabul}
- {country: Afghanistan, iso3: AFG, pcode: AF27, name: Kandahar}
- {country: Afghanistan, iso3: AFG, pcode: AF28, name: Jawzjan}
- {country: Afghanistan, iso3: AFG, pcode: AF29, name: Faryab}
- {country: Afghanistan, iso3: AFG, pcode: AF30, name: Hilmand}
- {country: Afghanistan, iso3: AFG, pcode: AF31, name: Badghis}
- {country: Afghanistan, iso3: AFG, pcode: AF32, name: Hirat}
- {country: Afghanistan, iso3: AFG, pcode: AF33, name: Farah}
- {country: Afghanistan, iso3: AFG, pcode: AF34, name: Nimroz}
- {country: Burundi, iso3: BDI, pcode: BDI001, name: Bubanza}
- {country: Burundi, iso3: BDI, pcode: BDI002, name: Bujumbura Rural}
- {country: Burundi, iso3: BDI, pcode: BDI003, name: Bururi}
- {country: Burundi, iso3: BDI, pcode: BDI004, name: Cankuzo}
- {country: Burundi, iso3: BDI, pcode: BDI005, name: Cibitoke}
- {country: Burundi, iso3: BDI, pcode: BDI006, name: Gitega}
- {country: Burundi, iso3: BDI, pcode: BDI007, name: Karuzi}
- {country: Burundi, iso3: BDI, pcode: BDI008, name: Kayanza}
- {country: Burundi, iso3: BDI, pcode: BDI009, name: Kirundo}
- {country: Burundi, iso3: BDI, pcode: BDI010, name: Makamba}
- {country: Burundi, iso3: BDI, pcode: BDI011, name: Muramvya}
- {country: Burundi, iso3: BDI, pcode: BDI012, name: Muyinga}
- {country: Burundi, iso3: BDI, pcode: BDI013, name: Mwaro}
- {country: Burundi, iso3: BDI, pcode: BDI014, name: Ngozi}
- {country: Burundi, iso3: BDI, pcode: BDI015, name: Rutana}
- {country: Burundi, iso3: BDI, pcode: BDI016, name: Ruyigi}
- {country: Burundi, iso3: BDI, pcode: BDI017, name: Bujumbura Mairie}
- {country: Burundi, iso3: BDI, pcode: BDI018, name: Rumonge}
- {country: Burkina Faso, iso3: BFA, pcode: BF13, name: Centre}
- {country: Burkina Faso, iso3: BFA, pcode: BF46, name: Boucle Du Mouhoun}
- {country: Burkina Faso, iso3: BFA, pcode: BF47, name: Cascades}
- {country: Burkina Faso, iso3: BFA, pcode: BF48, name: Centre Est}
- {country: Burkina Faso, iso3: BFA, pcode: BF49, name: Centre Nord}
- {country: Burkina Faso, iso3: BFA, pcode: BF50, name: Centre Ouest}
- {country: Burkina Faso, iso3: BFA, pcode: BF51, name: Centre Sud}
- {country: Burkina Faso, iso3: BFA, pcode: BF52, name: Est}
- {country: Burkina Faso, iso3: BFA, pcode: BF53, name: Hauts Bassins}
- {country: Burkina Faso, iso3: BFA, pcode: BF54, name: Nord}
- {country: Burkina Faso, iso3: BFA, pcode: BF55, name: Plateau Central}
- {country: Burkina Faso, iso3: BFA, pcode: BF56, name: Sahel}
- {country: Burkina Faso, iso3: BFA, pcode: BF57, name: Sud Ouest}
- {country: Central African Republic, iso3: CAF, pcode: CF11, name: Ombella Mpoko}
- {country: Central African Republic, iso3: CAF, pcode: CF12, name: Lobaye}
- {country: Central African Republic, iso3: CAF, pcode: CF21, name: Mambere Kadei}
- {country: Central African Republic, iso3: CAF, pcode: CF22, name: Nana Mambere}
- {country: Central African Republic, iso3: CAF, pcode: CF23, name: Sangha Mbaere}
- {country: Central African Republic, iso3: CAF, pcode: CF31, name: Ouham Pende}
- {country: Central African Republic, iso3: CAF, pcode: CF32, name: Ouham}
- {country: Central African Republic, iso3: CAF, pcode: CF41, name: Kemo}
- {country: Central African Republic, iso3: CAF, pcode: CF42, name: Nana Gribizi}
- {country: Central African Republic, iso3: CAF, pcode: CF43, name: Ouaka}
- {country: Central African Republic, iso3: CAF, pcode: CF51, name: Bamingui Bangoran}
- {country: Central African Republic, iso3: CAF, pcode: CF52, name: Haute Kotto}
- {country: Central African Republic, iso3: CAF, pcode: CF53, name: Vakaga}
- {country: Central African Republic, iso3: CAF, pcode: CF61, name: Basse Kotto}
- {country: Central African Republic, iso3: CAF, pcode: CF62, name: Mbomou}
- {country: Central African Republic, iso3: CAF, pcode: CF63, name: Haut Mbomou}
- {country: Central African Republic, iso3: CAF, pcode: CF71, name: Bangui}
- {country: Cameroon, iso3: CMR, pcode: CM001, name: Adamawa}
- {country: Cameroon, iso3: CMR, pcode: CM002, name: Centre}
- {country: Cameroon, iso3: CMR, pcode: CM003, name: East}
- {country: Cameroon, iso3: CMR, pcode: CM004, name: Far North}
- {country: Cameroon, iso3: CMR, pcode: CM005, name: Littoral}
- {country: Cameroon, iso3: CMR, pcode: CM006, name: North}
- {country: Cameroon, iso3: CMR, pcode: CM007, name: North West}
- {country: Cameroon, iso3: CMR, pcode: CM008, name: West}
- {country: Cameroon, iso3: CMR, pcode: CM009, name: South}
- {country: Cameroon, iso3: CMR, pcode: CM010, name: South West}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD10, name: Kinshasa}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD20, name: Kongo Central}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD31, name: Kwango}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD32, name: Kwilu}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD33, name: Mai Ndombe}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD41, name: Equateur}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD42, name: Sud Ubangi}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD43, name: Nord Ubangi}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD44, name: Mongala}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD45, name: Tshuapa}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD51, name: Tshopo}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD52, name: Bas Uele}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD53, name: Haut Uele}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD54, name: Ituri}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD61, name: Nord Kivu}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD62, name: Sud Kivu}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD63, name: Maniema}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD71, name: Haut Katanga}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD72, name: Lualaba}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD73, name: Haut Lomami}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD74, name: Tanganyika}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD81, name: Lomami}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD82, name: Kasai Oriental}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD83, name: Sankuru}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD91, name: Kasai Central}
- {country: Democratic Republic of the Congo, iso3: COD, pcode: CD92, name: Kasai}
- {country: Colombia, iso3: COL, pcode: CO05, name: Antioquia}
- {country: Colombia, iso3: COL, pcode: CO08, name: Atlantico}
- {country: Colombia, iso3: COL, pcode: CO11, name: "Bogota, D.C."}
- {country: Colombia, iso3: COL, pcode: CO13, name: Bolivar}
- {country: Colombia, iso3: COL, pcode: CO15, name: Boyaca}
- {country: Colombia, iso3: COL, pcode: CO17, name: Caldas}
- {country: Colombia, iso3: COL, pcode: CO18, name: Caqueta}
- {country: Colombia, iso3: COL, pcode: CO19, name: Cauca}
- {country: Colombia, iso3: COL, pcode: CO20, name: Cesar}
- {country: Colombia, iso3: COL, pcode: CO23, name: Cordoba}
- {country: Colombia, iso3: COL, pcode: CO25, name: Cundinamarca}
- {country: Colombia, iso3: COL, pcode: CO27, name: Choco}
- {country: Colombia, iso3: COL, pcode: CO41, name: Huila}
- {country: Colombia, iso3: COL, pcode: CO44, name: La Guajira}
- {country: Colombia, iso3: COL, pcode: CO47, name: Magdalena}
- {country: Colombia, iso3: COL, pcode: CO50, name: Meta}
- {country: Colombia, iso3: COL, pcode: CO52, name: Narino}
- {country: Colombia, iso3: COL, pcode: CO54, name: Norte de Santander}
- {country: Colombia, iso3: COL, pcode: CO63, name: Quindio}
- {country: Colombia, iso3: COL, pcode: CO66, name: Risaralda}
- {country: Colombia, iso3: COL, pcode: CO68, name: Santander}
- {country: Colombia, iso3: COL, pcode: CO70, name: Sucre}
- {country: Colombia, iso3: COL, pcode: CO73, name: Tolima}
- {country: Colombia, iso3: COL, pcode: CO76, name: Valle del Cauca}
- {country: Colombia, iso3: COL, pcode: CO81, name: Arauca}
- {country: Colombia, iso3: COL, pcode: CO85, name: Casanare}
- {country: Colombia, iso3: COL, pcode: CO86, name: Putumayo}
- {country: Colombia, iso3: COL, pcode: CO88, name: "Archipielago de San Andres, Providencia y Santa Catalina"}
- {country: Colombia, iso3: COL, pcode: CO91, name: Amazonas}
- {country: Colombia, iso3: COL, pcode: CO94, name: Guainia}
- {country: Colombia, iso3: COL, pcode: CO95, name: Guaviare}
- {country: Colombia, iso3: COL, pcode: CO97, name: Vaupes}
- {country: Colombia, iso3: COL, pcode: CO99, name: Vichada}
- {country: Ethiopia, iso3: ETH, pcode: ET01, name: Tigray}
- {country: Ethiopia, iso3: ETH, pcode: ET02, name: Afar}
- {country: Ethiopia, iso3: ETH, pcode: ET03, name: Amhara}
- {country: Ethiopia, iso3: ETH, pcode: ET04, name: Oromia}
- {country: Ethiopia, iso3: ETH, pcode: ET05, name: Somali}
- {country: Ethiopia, iso3: ETH, pcode: ET06, name: Benishangul Gumz}
- {country: Ethiopia, iso3: ETH, pcode: ET07, name: Snnp}
- {country: Ethiopia, iso3: ETH, pcode: ET12, name: Gambela}
- {country: Ethiopia, iso3: ETH, pcode: ET13, name: Harari}
- {country: Ethiopia, iso3: ETH, pcode: ET14, name: Addis Ababa}
- {country: Ethiopia, iso3: ETH, pcode: ET15, name: Dire Dawa}
- {country: Haiti, iso3: HTI, pcode: HT01, name: West}
- {country: Haiti, iso3: HTI, pcode: HT02, name: South East}
- {country: Haiti, iso3: HTI, pcode: HT03, name: North}
- {country: Haiti, iso3: HTI, pcode: HT04, name: North East}
- {country: Haiti, iso3: HTI, pcode: HT05, name: Artibonite}
- {country: Haiti, iso3: HTI, pcode: HT06, name: Centre}
- {country: Haiti, iso3: HTI, pcode: HT07, name: South}
- {country: Haiti, iso3: HTI, pcode: HT08, name: "Grande'Anse"}
- {country: Haiti, iso3: HTI, pcode: HT09, name: North West}
- {country: Haiti, iso3: HTI, pcode: HT10, name: Nippes}
- {country: Iraq, iso3: IRQ, pcode: IQG01, name: Al Anbar}
- {country: Iraq, iso3: IRQ, pcode: IQG02, name: Al Basrah}
- {country: Iraq, iso3: IRQ, pcode: IQG03, name: Al Muthanna}
- {country: Iraq, iso3: IRQ, pcode: IQG04, name: Al Najaf}
- {country: Iraq, iso3: IRQ, pcode: IQG05, name: Al Qadissiya}
- {country: Iraq, iso3: IRQ, pcode: IQG06, name: Al Sulaymaniyah}
- {country: Iraq, iso3: IRQ, pcode: IQG07, name: Babil}
- {country: Iraq, iso3: IRQ, pcode: IQG08, name: Baghdad}
- {country: Iraq, iso3: IRQ, pcode: IQG09, name: Duhok}
- {country: Iraq, iso3: IRQ, pcode: IQG10, name: Diyala}
- {country: Iraq, iso3: IRQ, pcode: IQG11, name: Erbil}
- {country: Iraq, iso3: IRQ, pcode: IQG12, name: Kerbala}
- {country: Iraq, iso3: IRQ, pcode: IQG13, name: Kirkuk}
- {country: Iraq, iso3: IRQ, pcode: IQG14, name: Maysan}
- {country: Iraq, iso3: IRQ, pcode: IQG15, name: Ninewa}
- {country: Iraq, iso3: IRQ, pcode: IQG16, name: Salah Al Din}
- {country: Iraq, iso3: IRQ, pcode: IQG17, name: Thi Qar}
- {country: Iraq, iso3: IRQ, pcode: IQG18, name: Wassit}
- {country: Libya, iso3: LBY, pcode: LY01, name: East}
- {country: Libya, iso3: LBY, pcode: LY02, name: West}
- {country: Libya, iso3: LBY, pcode: LY03, name: South}
- {country: Mali, iso3: MLI, pcode: ML01, name: Kayes}
- {country: Mali, iso3: MLI, pcode: ML02, name: Koulikoro}
- {country: Mali, iso3: MLI, pcode: ML03, name: Sikasso}
- {country: Mali, iso3: MLI, pcode: ML04, name: Segou}
- {country: Mali, iso3: MLI, pcode: ML05, name: Mopti}
- {country: Mali, iso3: MLI, pcode: ML06, name: Tombouctou}
- {country: Mali, iso3: MLI, pcode: ML07, name: Gao}
- {country: Mali, iso3: MLI, pcode: ML08, name: Kidal}
- {country: Mali, iso3: MLI, pcode: ML09, name: Bamako}
- {country: Myanmar, iso3: MMR, pcode: MMR001, name: Kachin}
- {country: Myanmar, iso3: MMR, pcode: MMR002, name: Kayah}
- {country: Myanmar, iso3: MMR, pcode: MMR003, name: Kayin}
- {country: Myanmar, iso3: MMR, pcode: MMR004, name: Chin}
- {country: Myanmar, iso3: MMR, pcode: MMR005, name: Sagaing}
- {country: Myanmar, iso3: MMR, pcode: MMR006, name: Tanintharyi}
- {country: Myanmar, iso3: MMR, pcode: MMR009, name: Magway}
- {country: Myanmar, iso3: MMR, pcode: MMR010, name: Mandalay}
- {country: Myanmar, iso3: MMR, pcode: MMR011, name: Mon}
- {country: Myanmar, iso3: MMR, pcode: MMR012, name: Rakhine}
- {country: Myanmar, iso3: MMR, pcode: MMR013, name: Yangon}
- {country: Myanmar, iso3: MMR, pcode: MMR017, name: Ayeyarwady}
- {country: Myanmar, iso3: MMR, pcode: MMR018, name: Nay Pyi Taw}
- {country: Myanmar, iso3: MMR, pcode: MMR111, name: Bago}
- {country: Myanmar, iso3: MMR, pcode: MMR222, name: Shan}
- {country: Niger, iso3: NER, pcode: NER001, name: Agadez}
- {country: Niger, iso3: NER, pcode: NER002, name: Diffa}
- {country: Niger, iso3: NER, pcode: NER003, name: Dosso}
- {country: Niger, iso3: NER, pcode: NER004, name: Maradi}
- {country: Niger, iso3: NER, pcode: NER005, name: Tahoua}
- {country: Niger, iso3: NER, pcode: NER006, name: Tillaberi}
- {country: Niger, iso3: NER, pcode: NER007, name: Zinder}
- {country: Niger, iso3: NER, pcode: NER008, name: Niamey}
- {country: Nigeria, iso3: NGA, pcode: NG001, name: Abia}
- {country: Nigeria, iso3: NGA, pcode: NG002, name: Adamawa}
- {country: Nigeria, iso3: NGA, pcode: NG003, name: Akwa Ibom}
- {country: Nigeria, iso3: NGA, pcode: NG004, name: Anambra}
- {country: Nigeria, iso3: NGA, pcode: NG005, name: Bauchi}
- {country: Nigeria, iso3: NGA, pcode: NG006, name: Bayelsa}
- {country: Nigeria, iso3: NGA, pcode: NG007, name: Benue}
- {country: Nigeria, iso3: NGA, pcode: NG008, name: Borno}
- {country: Nigeria, iso3: NGA, pcode: NG009, name: Cross River}
- {country: Nigeria, iso3: NGA, pcode: NG010, name: Delta}
- {country: Nigeria, iso3: NGA, pcode: NG011, name: Ebonyi}
- {country: Nigeria, iso3: NGA, pcode: NG012, name: Edo}
- {country: Nigeria, iso3: NGA, pcode: NG013, name: Ekiti}
- {country: Nigeria, iso3: NGA, pcode: NG014, name: Enugu}
- {country: Nigeria, iso3: NGA, pcode: NG015, name: Federal Capital Territory}
- {country: Nigeria, iso3: NGA, pcode: NG016, name: Gombe}
- {country: Nigeria, iso3: NGA, pcode: NG017, name: Imo}
- {country: Nigeria, iso3: NGA, pcode: NG018, name: Jigawa}
- {country: Nigeria, iso3: NGA, pcode: NG019, name: Kaduna}
- {country: Nigeria, iso3: NGA, pcode: NG020, name: Kano}
- {country: Nigeria, iso3: NGA, pcode: NG021, name: Katsina}
- {country: Nigeria, iso3: NGA, pcode: NG022, name: Kebbi}
- {country: Nigeria, iso3: NGA, pcode: NG023, name: Kogi}
- {country: Nigeria, iso3: NGA, pcode: NG024, name: Kwara}
- {country: Nigeria, iso3: NGA, pcode: NG025, name: Lagos}
- {country: Nigeria, iso3: NGA, pcode: NG026, name: Nasarawa}
- {country: Nigeria, iso3: NGA, pcode: NG027, name: Niger}
- {country: Nigeria, iso3: NGA, pcode: NG028, name: Ogun}
- {country: Nigeria, iso3: NGA, pcode: NG029, name: Ondo}
- {country: Nigeria, iso3: NGA, pcode: NG030, name: Osun}
- {country: Nigeria, iso3: NGA, pcode: NG031, name: Oyo}
- {country: Nigeria, iso3: NGA, pcode: NG032, name: Plateau}
- {country: Nigeria, iso3: NGA, pcode: NG033, name: Rivers}
- {country: Nigeria, iso3: NGA, pcode: NG034, name: Sokoto}
- {country: Nigeria, iso3: NGA, pcode: NG035, name: Taraba}
- {country: Nigeria, iso3: NGA, pcode: NG036, name: Yobe}
- {country: Nigeria, iso3: NGA, pcode: NG037, name: Zamfara}
- {country: State of Palestine, iso3: PSE, pcode: PS1, name: Gaza Strip}
- {country: State of Palestine, iso3: PSE, pcode: PS2, name: No Mans Land}
- {country: State of Palestine, iso3: PSE, pcode: PS3, name: West Bank}
- {country: Sudan, iso3: SDN, pcode: SD01, name: Khartoum}
- {country: Sudan, iso3: SDN, pcode: SD02, name: North Darfur}
- {country: Sudan, iso3: SDN, pcode: SD03, name: South Darfur}
- {country: Sudan, iso3: SDN, pcode: SD04, name: West Darfur}
- {country: Sudan, iso3: SDN, pcode: SD05, name: East Darfur}
- {country: Sudan, iso3: SDN, pcode: SD06, name: Central Darfur}
- {country: Sudan, iso3: SDN, pcode: SD07, name: South Kordofan}
- {country: Sudan, iso3: SDN, pcode: SD08, name: Blue Nile}
- {country: Sudan, iso3: SDN, pcode: SD09, name: White Nile}
- {country: Sudan, iso3: SDN, pcode: SD10, name: Red Sea}
- {country: Sudan, iso3: SDN, pcode: SD11, name: Kassala}
- {country: Sudan, iso3: SDN, pcode: SD12, name: Gedaref}
- {country: Sudan, iso3: SDN, pcode: SD13, name: North Kordofan}
- {country: Sudan, iso3: SDN, pcode: SD14, name: Sennar}
- {country: Sudan, iso3: SDN, pcode: SD15, name: Aj Jazirah}
- {country: Sudan, iso3: SDN, pcode: SD16, name: River Nile}
- {country: Sudan, iso3: SDN, pcode: SD17, name: Northern}
- {country: Sudan, iso3: SDN, pcode: SD18, name: West Kordofan}
- {country: Sudan, iso3: SDN, pcode: SD19, name: Abyei Pca}
- {country: Somalia, iso3: SOM, pcode: SO11, name: Awdal}
- {country: Somalia, iso3: SOM, pcode: SO12, name: Woqooyi Galbeed}
- {country: Somalia, iso3: SOM, pcode: SO13, name: Togdheer}
- {country: Somalia, iso3: SOM, pcode: SO14, name: Sool}
- {country: Somalia, iso3: SOM, pcode: SO15, name: Sanaag}
- {country: Somalia, iso3: SOM, pcode: SO16, name: Bari}
- {country: Somalia, iso3: SOM, pcode: SO17, name: Nugaal}
- {country: Somalia, iso3: SOM, pcode: SO18, name: Mudug}
- {country: Somalia, iso3: SOM, pcode: SO19, name: Galgaduud}
- {country: Somalia, iso3: SOM, pcode: SO20, name: Hiraan}
- {country: Somalia, iso3: SOM, pcode: SO21, name: Middle Shabelle}
- {country: Somalia, iso3: SOM, pcode: SO22, name: Banadir}
- {country: Somalia, iso3: SOM, pcode: SO23, name: Lower Shabelle}
- {country: Somalia, iso3: SOM, pcode: SO24, name: Bay}
- {country: Somalia, iso3: SOM, pcode: SO25, name: Bakool}
- {country: Somalia, iso3: SOM, pcode: SO26, name: Gedo}
- {country: Somalia, iso3: SOM, pcode: SO27, name: Middle Juba}
- {country: Somalia, iso3: SOM, pcode: SO28, name: Lower Juba}
- {country: South Sudan, iso3: SSD, pcode: SS01, name: Central Equatoria}
- {country: South Sudan, iso3: SSD, pcode: SS02, name: Eastern Equatoria}
- {country: South Sudan, iso3: SSD, pcode: SS03, name: Jonglei}
- {country: South Sudan, iso3: SSD, pcode: SS04, name: Lakes}
- {country: South Sudan, iso3: SSD, pcode: SS05, name: Northern Bahr El Ghazal}
- {country: South Sudan, iso3: SSD, pcode: SS06, name: Unity}
- {country: South Sudan, iso3: SSD, pcode: SS07, name: Upper Nile}
- {country: South Sudan, iso3: SSD, pcode: SS08, name: Warrap}
- {country: South Sudan, iso3: SSD, pcode: SS09, name: Western Bahr El Ghazal}
- {country: South Sudan, iso3: SSD, pcode: SS10, name: Western Equatoria}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY01, name: Damascus}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY02, name: Aleppo}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY03, name: Rural Damascus}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY04, name: Homs}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY05, name: Hama}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY06, name: Lattakia}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY07, name: Idleb}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY08, name: Al Hasakeh}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY09, name: Deir Ez Zor}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY10, name: Tartous}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY11, name: Ar Raqqa}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY12, name: Dara}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY13, name: As Sweida}
- {country: Syrian Arab Republic, iso3: SYR, pcode: SY14, name: Quneitra}
- {country: Chad, iso3: TCD, pcode: TD01, name: Batha}
- {country: Chad, iso3: TCD, pcode: TD02, name: Borkou}
- {country: Chad, iso3: TCD, pcode: TD03, name: Chari Baguirmi}
- {country: Chad, iso3: TCD, pcode: TD04, name: Guera}
- {country: Chad, iso3: TCD, pcode: TD05, name: Hadjer Lamis}
- {country: Chad, iso3: TCD, pcode: TD06, name: Kanem}
- {country: Chad, iso3: TCD, pcode: TD07, name: Lac}
- {country: Chad, iso3: TCD, pcode: TD08, name: Logone Occidental}
- {country: Chad, iso3: TCD, pcode: TD09, name: Logone Oriental}
- {country: Chad, iso3: TCD, pcode: TD10, name: Mandoul}
- {country: Chad, iso3: TCD, pcode: TD11, name: Mayo Kebbi Est}
- {country: Chad, iso3: TCD, pcode: TD12, name: Mayo Kebbi Ouest}
- {country: Chad, iso3: TCD, pcode: TD13, name: Moyen Chari}
- {country: Chad, iso3: TCD, pcode: TD14, name: Ouaddai}
- {country: Chad, iso3: TCD, pcode: TD15, name: Salamat}
- {country: Chad, iso3: TCD, pcode: TD16, name: Tandjile}
- {country: Chad, iso3: TCD, pcode: TD17, name: Wadi Fira}
- {country: Chad, iso3: TCD, pcode: TD18, name: Ndjamena}
- {country: Chad, iso3: TCD, pcode: TD19, name: Barh El Gazel}
- {country: Chad, iso3: TCD, pcode: TD20, name: Ennedi Est}
- {country: Chad, iso3: TCD, pcode: TD21, name: Sila}
- {country: Chad, iso3: TCD, pcode: TD22, name: Tibesti}
- {country: Chad, iso3: TCD, pcode: TD23, name: Ennedi Ouest}
- {country: Ukraine, iso3: UKR, pcode: UA01, name: Avtonomna Respublika Krym}
- {country: Ukraine, iso3: UKR, pcode: UA05, name: Vinnytska}
- {country: Ukraine, iso3: UKR, pcode: UA07, name: Volynska}
- {country: Ukraine, iso3: UKR, pcode: UA12, name: Dnipropetrovska}
- {country: Ukraine, iso3: UKR, pcode: UA14, name: Donetska}
- {country: Ukraine, iso3: UKR, pcode: UA18, name: Zhytomyrska}
- {country: Ukraine, iso3: UKR, pcode: UA21, name: Zakarpatska}
- {country: Ukraine, iso3: UKR, pcode: UA23, name: Zaporizka}
- {country: Ukraine, iso3: UKR, pcode: UA26, name: Ivano Frankivska}
- {country: Ukraine, iso3: UKR, pcode: UA32, name: Kyivska}
- {country: Ukraine, iso3: UKR, pcode: UA35, name: Kirovohradska}
- {country: Ukraine, iso3: UKR, pcode: UA44, name: Luhanska}
- {country: Ukraine, iso3: UKR, pcode: UA46, name: Lvivska}
- {country: Ukraine, iso3: UKR, pcode: UA48, name: Mykolaivska}
- {country: Ukraine, iso3: UKR, pcode: UA51, name: Odeska}
- {country: Ukraine, iso3: UKR, pcode: UA53, name: Poltavska}
- {country: Ukraine, iso3: UKR, pcode: UA56, name: Rivnenska}
- {country: Ukraine, iso3: UKR, pcode: UA59, name: Sumska}
- {country: Ukraine, iso3: UKR, pcode: UA61, name: Ternopilska}
- {country: Ukraine, iso3: UKR, pcode: UA63, name: Kharkivska}
- {country: Ukraine, iso3: UKR, pcode: UA65, name: Khersonska}
- {country: Ukraine, iso3: UKR, pcode: UA68, name: Khmelnytska}
- {country: Ukraine, iso3: UKR, pcode: UA71, name: Cherkaska}
- {country: Ukraine, iso3: UKR, pcode: UA73, name: Chernivetska}
- {country: Ukraine, iso3: UKR, pcode: UA74, name: Chernihivska}
- {country: Ukraine, iso3: UKR, pcode: UA80, name: Kyivska}
- {country: Ukraine, iso3: UKR, pcode: UA85, name: Sevastopol}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE01, name: Distrito Federal}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE02, name: Amazonas}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE03, name: Anzoategui}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE04, name: Apure}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE05, name: Aragua}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE06, name: Barinas}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE07, name: Bolivar}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE08, name: Carabobo}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE09, name: Cojedes}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE10, name: Delta Amacuro}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE11, name: Falcon}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE12, name: Guarico}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE13, name: Lara}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE14, name: Merida}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE15, name: Miranda}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE16, name: Monagas}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE17, name: Nueva Esparta}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE18, name: Portuguesa}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE19, name: Sucre}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE20, name: Tachira}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE21, name: Trujillo}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE22, name: Yaracuy}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE23, name: Zulia}
- {country: Venezuela (Bolivarian Republic of), iso3: VEN, pcode: VE24, name: Vargas}
- {country: Yemen, iso3: YEM, pcode: YE11, name: Ibb}
- {country: Yemen, iso3: YEM, pcode: YE12, name: Abyan}
- {country: Yemen, iso3: YEM, pcode: YE13, name: Sanaa City}
- {country: Yemen, iso3: YEM, pcode: YE14, name: Al Bayda}
- {country: Yemen, iso3: YEM, pcode: YE15, name: Taiz}
- {country: Yemen, iso3: YEM, pcode: YE16, name: Al Jawf}
- {country: Yemen, iso3: YEM, pcode: YE17, name: Hajjah}
- {country: Yemen, iso3: YEM, pcode: YE18, name: Al Hodeidah}
- {country: Yemen, iso3: YEM, pcode: YE19, name: Hadramawt}
- {country: Yemen, iso3: YEM, pcode: YE20, name: Dhamar}
- {country: Yemen, iso3: YEM, pcode: YE21, name: Shabwah}
- {country: Yemen, iso3: YEM, pcode: YE22, name: Sadah}
- {country: Yemen, iso3: YEM, pcode: YE23, name: Sanaa}
- {country: Yemen, iso3: YEM, pcode: YE24, name: Aden}
- {country: Yemen, iso3: YEM, pcode: YE25, name: Lahj}
- {country: Yemen, iso3: YEM, pcode: YE26, name: Marib}
- {country: Yemen, iso3: YEM, pcode: YE27, name: Al Mahwit}
- {country: Yemen, iso3: YEM, pcode: YE28, name: Al Maharah}
- {country: Yemen, iso3: YEM, pcode: YE29, name: Amran}
- {country: Yemen, iso3: YEM, pcode: YE30, name: Ad Dali}
- {country: Yemen, iso3: YEM, pcode: YE31, name: Raymah}
- {country: Yemen, iso3: YEM, pcode: YE32, name: Socotra}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW10, name: Bulawayo}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW11, name: Manicaland}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW12, name: Mashonaland Central}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW13, name: Mashonaland East}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW14, name: Mashonaland West}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW15, name: Matabeleland North}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW16, name: Matabeleland South}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW17, name: Midlands}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW18, name: Masvingo}
- {country: Zimbabwe, iso3: ZWE, pcode: ZW19, name: Harare}

admin1_name_mappings:
  "Nord-Ouest": "HT09"
  "nord-ouest": "HT09"
  "nord-quest": "HT09"
  "north-west": "HT09"
  "Abuja": "NG015"
  "FCT": "NG015"
  "FCT (Abuja)": "NG015"
  "FCT Abuja": "NG015"
  "Abuja FCT": "NG015"
  "C.EST": "BF48"
  "C.NORD": "BF49"
  "C.OUEST": "BF50"
  "C.SUD": "BF51"
  "centre-ouest": "BF50"
  "Centre-Ouest": "BF50"
  "central /south": "BF51"
  "central/south": "BF51"
  "S.OUEST": "BF57"
  "Bas congo": "CD20"
  "Bas-congo": "CD20"
  "bas-congo": "CD20"
  "MUTHANA": "IQG03"
  "Gezira": "SD15"
  "Gazira": "SD15"
  "Hasaka": "SY08"
  "Hassake": "SY08"
  "al-raka": "SY11"
  "al-amana": "YE23"
  "PL.Sool": "SO14"
  "Sc.Mudug": "SO18"
  "Amanat Al Asimah / أمانة العاصمة": "YE13"
  "Juba Dhexe": "SO27"
  "Juba Hoose": "SO28"
  "Shabelle Dhexe": "SO21"
  "Shabelle Hoose": "SO23"
  "ben-gumz": "ET06"
  "Rural-Dam": "SY03"
  "al-qunitara": "SY14"
  "harare /chitungwiza": "ZW19"
  "B MOUHOUN": "BF46"
  "H BASSINS": "BF53"
  "P CENTRAL": "BF55"
  "EXTREME NORD": "CM004"
  "Extreme Nord": "CM004"
  "Extr�me-Nord": "CM004"
  "extreme nord": "CM004"
  "extr�me-nord": "CM004"
  "SAN_ANDRES_ISLAS": "CO88"
  "FCT, Abuja": "NG015"
  "PL.Mudug": "SO18"
  "PL.Sanag": "SO15"
  "DAR SILA": "TD21"
  "Sana'a Govt.": "YE23"
  "DISTRITO CAPITAL": "VE01"
  "Chernigovskaja Oblast": "UA74"
  "Chernіvеtskaja Oblast": "UA73"
  "Crimea": "UA01"
  "Luganskaja Oblast": "UA44"
  "Rovenskaja Oblast": "UA56"
  "Sevastopol City": "UA85"
  "Zapоrіzskaja Oblast": "UA23"
  "CU Niamey": "NER008"


admin1_name_replacements:
  " urban": ""
  "sud": "south"
  "ouest": "west"
  "est": "east"
  "nord": "north"
  "'": ""
  "/": " "
  ".": " "
  " region": ""
  " oblast": ""

admin1_fuzzy_dont:
  - "nord"
  - "north"
  - "sud"
  - "south"
  - "est"
  - "east"
  - "ouest"
  - "west"
  - "comoe"
  - "mouhoun"
  - "nahouri"
  - "houet"
  - "nayala"
  - "seno"
  - "soum"
  - "sourou"
  - "yaound�"
  - "katanga"
  - "ta'amem"
  - "sabha"
  - "bago(east)"
  - "bago(west)"
  - "bago (east)"
  - "bago (west)"
  - "dakoro"
  - "mayahi"
  - "tessaoua"
  - "south south"
  - "BET"
  - "b. e. t."
  - "b.e.t."
  - "mayo-kebbi"
  - "mayo kebbi"
  - "desert"
  - "south & east"
  - "menaka"
  - "mordex"
  - "sahil"
  - "say'on"
  - "syria"
